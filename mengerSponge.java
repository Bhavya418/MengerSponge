/* autogenerated by Processing revision 1289 on 2023-01-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class mengerSponge extends PApplet {

float rotatex=0;
float rotatey=0;
float rotatez=0;
ArrayList<Box> MengerSponge;
public void setup() {
  //This commond creates a  canvas and P3D is 3d library for 3D sketches
  /* size commented out by preprocessor */;
  //Box(x,y,z,r)
  //First, create a basic cube at the center to start with menger sponge
  MengerSponge= new ArrayList<Box>();
  Box b=new Box(0, 0, 0, 200);
  MengerSponge.add(b);
}
public void mouseClicked() {
  //Adding the arrayList for the next 27 boxes which gets created on every click for every boxes in mengersponge
  ArrayList<Box> nextGeneration= new ArrayList<Box>();
  for (Box b : MengerSponge) {
    ArrayList<Box> newBoxes = b.generate();
    nextGeneration.addAll(newBoxes);
  }
  MengerSponge = nextGeneration;
}
public void draw() {
  //Setting up the workspace with background
  background(50);
  stroke(230);
  lights();
  translate(width/2, height/2);
  rotateX(rotatex);
  rotateY(rotatey);
  rotateZ(rotatez);
  for (Box b : MengerSponge) {
    b.show();
  }
  rotatex+=0.01f;
  rotatey+=0.02f;
  rotatez+=0.01f;
}
class Box
{
  //Box object to create a box
  PVector pos;
  float r;
  Box(float x, float y, float z, float rBox) {
    pos= new PVector(x, y, z);
    r=rBox;
  }
  public ArrayList<Box> generate() {
    ArrayList<Box> boxes = new ArrayList<Box>();
    for (int x=-1; x<2; x++) {
      for (int y=-1; y<2; y++) {
        for (int z=-1; z<2; z++) {
          //Adding boxes when sum is greater than 1 to ensure the center of every face and center of the cube is removed which is any two or more of x,y,z is not zero
          int sum = abs(x)+ abs(y)+ abs(z);
          float newR = r/3;
          if (sum>1) {
            //Adding the box a new position 
            Box b = new Box(pos.x+x*newR, pos.y+y*newR, pos.z+z*newR, newR);
            boxes.add(b);
          }
        }
      }
    }
    return boxes;
  }
  public void show() {
    //Using the passed values tranlating the box to given coordinates and making a box of size r over there
    pushMatrix();
    translate(pos.x, pos.y, pos.z);
    box(r);
    popMatrix();
  }
}


  public void settings() { size(400, 400, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "--full-screen", "--bgcolor=#666666", "--stop-color=#cccccc", "mengerSponge" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
